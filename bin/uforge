#!/bin/bash

usage()
{
cat << EOF

  usage: $0 [options] command

  This script allow to forge HDC documents in accordance with a uCoin server data.

  Command:
    forge-cert  Forge and sign a public key request
    forge-join  Forge and sign a joining membership
    forge-actu  Forge and sign an actualizing membership
    forge-leave Forge and sign a leaving membership

  Options:
    -s  uCoin server to look data in
    -p  uCoin server port
    -u  PGP key to use for signature
    -h  Help

EOF
}

SERVER=
PORT=
user=
while getopts :hs:p:u: OPT; do
  case "$OPT" in
    s)
      SERVER="$OPTARG"
      ;;
    p)
      PORT="$OPTARG"
      ;;
    u)
      user="$OPTARG"
      ;;
    h)
      usage
      exit 0
      ;;
    ?)
      echo "Bad parameters." >&2
      usage >&2
      exit 1
      ;;
  esac
done

# Remove the switches we parsed above
shift `expr $OPTIND - 1`

if [ $# -eq 0 ]; then
  echo "Need a command."
  usage >&2
  exit 1
fi

cwd=`echo $0 | sed -e "s/\(.*\)\/\([^\/]*\)/\1/g"`
cwd="`pwd`/$cwd"
cmd="$1"
vucoin="$cwd/vucoin"

if [ ! -z $SERVER ]; then
  vucoin="$vucoin -s $SERVER"
fi

if [ ! -z $PORT ]; then
  vucoin="$vucoin -p $PORT"
fi

sign()
{
  command=$@
  uuser="-u $user"
  forged=`$command`
  signed="`$command | unix2dos | gpg -s -a $uuser --batch | unix2dos`"
  echo "$forged" | unix2dos
  echo "$signed" | unix2dos
}

case "$cmd" in
  
  contract)
    echo "`$vucoin --contract`"
    ;;
  
  peer)
    echo "`$vucoin --peering`"
    ;;

  forge-cert)
    if [ -z $user ]; then
      echo "Requires -u option."
      exit 1
    fi
    sign "gpg -a --export $user"
    ;;

  forge-join)
    sign "$vucoin --forgejoin"
    ;;

  forge-actu)
    sign "$vucoin --forgeactu"
    ;;

  forge-leave)
    sign "$vucoin --forgeleave"
    ;;

  **)
    echo "Bad command." >&2
    usage >&2
    exit 1
    ;;
esac
